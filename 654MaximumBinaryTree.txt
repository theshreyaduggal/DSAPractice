/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) 
    {
        return constructTree(nums, 0, nums.length-1);        
    }

    public TreeNode constructTree(int[] nums, int beg, int end)
    {
        if(beg > end)
        {
            return null;
        }

        int num = -1;
        int max = Integer.MIN_VALUE;

        for(int i=beg; i<=end; i++)
        {
            if(nums[i] > max)
            {
                num = i;
                max = nums[i];
            }
        }

        TreeNode root = new TreeNode(max);

        root.left = constructTree(nums, beg, num-1);
        root.right = constructTree(nums, num+1, end);

        return root;    
    }
}