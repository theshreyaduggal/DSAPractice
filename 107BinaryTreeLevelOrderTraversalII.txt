/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) 
    {
        List<List<Integer>> list = new ArrayList<>();

        if (root == null)
		{
			return list;
		}

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);

        while (!queue.isEmpty()) 
		{
            int size = queue.size();
            ArrayList<Integer> list2 = new ArrayList<>();
            
            for (int i=0; i<size; i++)
            {
                TreeNode node = queue.remove();
                
                list2.add(node.val);
            
                if (node.left != null) 
			    {
                    queue.add(node.left);
                }
          
                if (node.right != null) 
			    {
                    queue.add(node.right);
                }
            }
            
            list.add(0, list2);
        }    

        return list;    
    }
}