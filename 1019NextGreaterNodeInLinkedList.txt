/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) 
    {
        ArrayList<Integer> list = new ArrayList<>();
        Deque<Integer> stack = new ArrayDeque<>();

        while (head != null) 
        {
            list.add(head.val);
            head = head.next;
        }

        int[] ans = new int[list.size()];
        
        for (int i=list.size()-1; i>=0; i--) 
        {
            while (!stack.isEmpty() && stack.peek() <= list.get(i)) 
            {
                stack.pop(); 
            }

            if (!stack.isEmpty()) 
            {
                ans[i] = stack.peek(); 
            }

            stack.push(list.get(i)); 
        }

        return ans;    
    }
}